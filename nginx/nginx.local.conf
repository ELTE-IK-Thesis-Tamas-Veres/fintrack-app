worker_processes 1;

events {
  worker_connections 1024;
}

http {
  client_max_body_size 50m;

  # Use Docker's embedded DNS resolver for dynamic resolution
  resolver 127.0.0.11 valid=30s;

  # Define an upstream block for the fintrack-api with dynamic resolution
  upstream fintrack_api {
    zone fintrack_api 64k;
    server fintrack-api:5000 resolve;
  }

  server {
    listen 80;
    server_name localhost;

    # Frontend: Proxy all requests to Next.js frontend
    location / {
      proxy_pass http://fintrack-app:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Backend: Proxy requests starting with /fintrack-api/ to the fintrack-api service
    location /fintrack-api/ {
      proxy_pass http://fintrack_api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}

#TCP proxy for MySQL (MariaDB) service
stream {
  # Use Docker's embedded DNS resolver in stream context as well
  resolver 127.0.0.11 valid=30s;

  upstream fintrack_database_server {
    zone fintrack_database_server 64k;
    server fintrack-database-server:3306 resolve;
  }

  server {
    listen 3306;
    proxy_pass fintrack_database_server;
  }
}